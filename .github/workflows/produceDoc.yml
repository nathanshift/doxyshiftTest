name: 'single repo action test'

on: 
  workflow_call:
    inputs:
      Doxyfile:
        default: ".github/runthedoc/Doxyfile"
        required: false
        type: string
        description: Path to where the Doxyfile is. (By default it should be at .github/runthedoc/Doxyfile)
      Parent-page-name:
        default: ${{ github.event.repository.name }}
        required: false
        type: string
        description: Optional name for the parent page under which the documentation will leave. (By default the current repository name will be used)
      Parent-page-description:
        required: false
        type: string
        description: Parent page description for what the documentation for the current repository is all about.
      
      PROJECT_NAME:
        description: 'Name of the project. Can be the same as Parent-page-name'
        required: false
        default: ${{ github.event.repository.name }} 
        type: string
      OUTPUT_DIRECTORY:
        default: ./myGitFiles/
        description: 'Test scenario tags'
        required: false 
        type: string



jobs:
  Build-doc:
    name: Build tool
    runs-on: ubuntu-latest
    container:
      image: docker://ghcr.io/nathanshift/runthedoc:v0.0
      volumes:
         - ${{ github.workspace }}:/app/${{ github.event.repository.name }}
    defaults:
      run:
        working-directory: /
    steps:
      - name: check out repo
        uses: actions/checkout@v3

      - name: See inside my image
        run: |
          cd ../app
          ls
          dotnet DockerIt.dll
          cd myGitFiles
          ls -a

      - name: Argument Check
        shell: bash
        run: |
          echo ${{inputs.Doxyfile}}
          FILE=/myGitFiles/${{inputs.Doxyfile}}
          echo $FILE
          if [ ! -f $FILE ]; then 
            echo "the provided path $FILE does not exist. Verify that you've provided the right path" 
            echo "Creating Default Doxyfile with provided or default settings."
            doxygen -g Doxyfile
            
            #exit 1 
          else
            echo "Found ${FILE}!"
          fi
      - name: Produce html
        run: doxygen ${{ inputs.Doxyfile}}

      # - name: Run Parser for Confluence
      #   run:   
          
          

        
